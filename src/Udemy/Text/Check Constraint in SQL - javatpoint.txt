

 
  
  Check Constraint in SQL - javatpoint
   
  
  
  
  
  
  
  
  
   
  
  
  
  
  
   
  
  
  
  
  
  
  
  
  
   
   
   
   
  
  
  ? SCROLL TO TOP 
  
    
    
      
      
        
         
          
           
          
         
          
           
           
       
      
      
     
     
      
       
       
      
      
       
       
      
     
     
      
       
        Home 
        SQL 
        PL/SQL 
        MySQL 
        MongoDB 
        PostgreSQL 
        SQL Server 
        Oracle 
        Cassandra 
        SQLite 
        DBMS 
        Python 
        Java 
        Aptitude 
        Interview Q 
       
       
     
     
     
     
      
     
     
     Oracle Training 
      
      SQL Tutorial 
      
      
      What is SQL 
      SQL Syntax 
      SQL Data Types 
      SQL Operators 
      
      
      SQL Database 
      
      
      SQL CREATE Database 
      SQL DROP Database 
      SQL RENAME Database 
      SQL SELECT Database 
      
      
      SQL Table 
      
      
      What is Table 
      SQL CREATE TABLE 
      SQL DROP TABLE 
      SQL DELETE TABLE 
      SQL RENAME TABLE 
      SQL TRUNCATE TABLE 
      SQL COPY TABLE 
      SQL TEMP TABLE 
      SQL ALTER TABLE 
      
      
      SQL Select 
      
      
      SELECT Statement 
      SQL SELECT UNIQUE 
      SQL SELECT DISTINCT 
      SQL SELECT COUNT 
      SQL SELECT TOP 
      SQL SELECT FIRST 
      SQL SELECT LAST 
      SQL SELECT RANDOM 
      SQL SELECT IN 
      SQL SELECT Multiple 
      SQL SELECT DATE 
      SQL SELECT SUM 
      SQL SELECT NULL 
      
      
      SQL Clause 
      
      
      SQL WHERE 
      SQL AND 
      SQL OR 
      SQL WITH 
      SQL AS 
      SQL HAVING Clause 
      
      
      SQL Order By 
      
      
      ORDER BY Clause 
      ORDER BY ASC 
      ORDER BY DESC 
      ORDER BY RANDOM 
      ORDER BY LIMIT 
      ORDER BY Multiple Cols 
      
      
      SQL Insert 
      
      
      INSERT Statement 
      INSERT INTO Values 
      INSERT INTO SELECT 
      INSERT Multiple Rows 
      
      
      SQL Update 
      
      
      UPDATE Statement 
      SQL UPDATE JOIN 
      SQL UPDATE DATE 
      
      
      SQL Delete 
      
      
      DELETE Statement 
      SQL DELETE TABLE 
      SQL DELETE ROW 
      SQL DELETE All Rows 
      DELETE Duplicate Rows 
      SQL DELETE DATABASE 
      SQL DELETE VIEW 
      SQL DELETE JOIN 
      
      
      SQL Join 
      
      
      SQL JOIN 
      SQL Outer Join 
      SQL Left Join 
      SQL Right Join 
      SQL Full Join 
      SQL Cross Join 
      
      
      SQL Keys 
      
      
      Primary Key 
      Foreign Key 
      Composite Key 
      Unique Key 
      Alternate Key 
      
      
      Difference 
      
      
      SQL vs NoSQL 
      IN vs EXISTS 
      Group By vs Order By 
      WHERE vs HAVING 
      Where condition in SQL 
      
      
      SQL Injection 
      
      
      SQL Injection 
      
      
      Misc 
      
      
      SQL Formatter 
      SQL group by 
      SQL add/drop/update column operation 
      SQL CAST Function 
      SQL Comments 
      SQL CONCAT Function 
      CTE SQL 
      How to use distinct in SQL 
      Joining Three or More Tables in SQL 
      What is Web SQL 
      How to create functions in SQL 
      How to run SQL Script 
      How to Delete Duplicate Rows in SQL 
      Nth Highest salary 
      12 Codd's Rules 
      SQL EXCEPT 
      Types of SQL JOIN 
      Change datatype of column in SQL 
      SQL Auto Increment 
      SQL Like 
      Commit and Rollback in SQL 
      SQL Concatenate 
      SQL get month from the date 
      Savepoint in SQL 
      SQL ORDER BY DATE 
      TIME Datatype in SQL 
      SQL BETWEEN 
      SQL CRUD Operations 
      SQL INDEX 
      Scalar Functions in SQL 
      SET Operators in SQL 
      Types of SQL Commands 
      TCL Commands in SQL 
      SQL Subquery 
      SQL View 
      Constraints in SQL 
      Pattern Matching in SQL 
      SQL Date Functions 
      DDL Commands in SQL 
      DML Commands in SQL 
      SQL CASE 
      SQL Inner Join 
      SQL IN Operator 
      Check Constraint in SQL 
      SQL CLAUSES 
      SQL LOGICAL OPERATORS 
      
      
      SQL MCQ 
      
      
      SQL MCQ 
      
      
      PL/SQL Tutorial 
      
      
      PL/SQL Tutorial 
      
      
      Interview 
      
      
      SQL Interview 
      PL/SQL Interview 
      
      
      Quiz 
      
      
      SQL Quiz 
      
      
      
      
       
        
       
      
     
     
      
       
        
       
      
      
       
        
        
         
           
            
            next ? 
            ? prev 
            Check Constraint in SQL 
            
            Check constraint is validation or a rule which is applied on the column of a table. 
            When we apply check constraint to any column, it checks for specific values while inserting any record. 
            Check constraint can be created on a table level as well as column level. 
            Check constraints can be applied only to a single column, but there can be multiple check constraints in a single table. 
            Let us see a few practical examples to understand this concept more clearly. We will use the MariaDB database for writing all the queries. 1. Check constraint on column level: To apply a check constraint on a column level, we must specify the check constraint just after the column name. Syntax: 
           
            
CREATE TABLE TableName(ColumnName1 Datatype(size), ColumnName2 Datatype(size), ColumnName3 Datatype(size) Constraint ConstraintName CHECK(ColumnName CONDITION Value),…, ColumnNameN Datatype(size));

            We will write a query to create a table and specify a column-level check constraint on one of the columns: 
           
            
CREATE TABLE employee(E_ID INT NOT NULL, Name VARCHAR(40), Salary INT, City VARCHAR(20), Designation VARCHAR(40), Date_of_Joining Date NOT NULL CHECK(Date_of_Joining > "2019-02-01"), Age INT, PRIMARY KEY(E_ID));

              In the above query, we have specified the CHECK constraint on the Date_of_Joining column. According to this constraint, the Date_of_Joining column will allow only those records to be inserted where the date of joining is after '2019-02-01'. To verify that the CHECK constraint is created on the Date_of_Joining column, we will execute the following query: 
           
            
SHOW CREATE TABLE employee;

              Now, we will try to insert a record in the employees table where the joining date of an employee is before '2019-02-01'. 
           
            
INSERT INTO employees(E_ID, Name, Salary, City, Designation, Date_of_Joining, Age) VALUES(11, "Simran Khanna", 45500, "Kolhapur", "HR", "2019-01-01", 26);

              Constraint failed error is issued when we tried to insert an employee whose joining date is '2019-01-01'. Since we have applied the check constraint on the Date_of_Joining column, it will allow only the joining date more than '2019-02-01'. Example 2: We will write a query to create a table and specify a column-level check constraint on more than one column. Query: 
           
            
CREATE TABLE students(S_ID INT NOT NULL, S_Name VARCHAR(40), Hometown VARCHAR(20), Percentage INT NOT NULL CHECK(Percentage >90), Favourite_Subject VARCHAR(20) NOT NULL CHECK( Favourite_Subject IN('Science', 'Maths', 'English')), PRIMARY KEY (S_ID));

              In the above query, we have specified the CHECK constraint on the Percentage and Favourite_Subject column. According to this constraint, the Percentage column will allow only those records to be inserted where the percentage secured by students is above 90, and the favourite subject of the student is either Science, Maths or English. To verify that the check constraint is created successfully on the Percentage and Favourite_Subject column, we will execute the following command: 
           
            
SHOW CREATE TABLE students;

              Now, we will try to insert a record in the students table where the percentage secured by the student is below 90. 
           
            
INSERT INTO students(S_ID, S_Name, Hometown, Percentage, Favourite_Subject) VALUES(106, "Harshada", "Nashik", 89, "Science");

              Constraint failed error is issued when we tried to insert a student whose percentage is 89. Since we have applied the check constraint on the Percentage column, it will allow only the percentage more than 90. Now, we will try to insert a record in the students table where the percentage secured by the student is above 90. 
           
            
INSERT INTO students(S_ID, S_Name, Hometown, Percentage, Favourite_Subject) VALUES(106, "Harshada", "Nashik", 92, "Science");

              A record where the percentage secured by the student is 92 is inserted successfully. Since we have applied the check constraint on the Percentage column, it will allow only the percentage more than 90. 1. Check constraint on table level: To apply a check constraint on a table level, we must specify the check constraint before ending the table creation. Syntax: 
           
            
CREATE TABLE TableName(ColumnName1 Datatype(size), ColumnName2 Datatype(size), ColumnName3 Datatype(size),…, ColumnNameN Datatype(size), Constraint ConstraintName CHECK(ColumnName CONDITION Value));

            Example 1: We will write a query to create a table and specify a table-level check constraint on one of the columns. 
           
            
CREATE TABLE employ(E_ID INT NOT NULL, Name VARCHAR(40), Salary INT, City VARCHAR(20), Designation VARCHAR(40), Date_of_Joining Date NOT NULL, Age INT, PRIMARY KEY(E_ID), CONSTRAINT Constraint_DOJ CHECK(Date_of_Joining <= "2019-02-01"));

              In the above query, we have specified the CHECK constraint on the Date_of_Joining column. According to this constraint, the Date_of_Joining column will allow only those records to be inserted where the joining date is less than or equal to '2019-02-01'. To verify that the check constraint is created successfully on the Date_of_Joining column, we will execute the following command: 
           
            
SHOW CREATE TABLE employ;

              Now, we will try to insert a record in the employ table where the joining date of an employee is equal to '2019-02-01'. 
           
            
INSERT INTO employ(E_ID, Name, Salary, City, Designation, Date_of_Joining, Age) VALUES(11, "Simran Khanna", 45500, "Kolhapur", "HR", "2019-02-01", 26);

              A record where the joining date is less than or equal to '29-02-01' is inserted successfully. Since we have applied the check constraint on the Date_of_Joining column, it will allow only the dates less than or equal to '29-02-01'. Example 2: We will write a query to create a table and specify a table-level check constraint on more than one column. 
           
            
CREATE TABLE student(S_ID INT NOT NULL, S_Name VARCHAR(40), Hometown VARCHAR(20), Percentage INT NOT NULL,  Favourite_Subject VARCHAR(20) NOT NULL, CONSTRAINT Constraint_Percentage (Percentage >90), CONSTRAINT Constraint_Fav_sub CHECK( Favourite_Subject IN('Science', 'Maths', 'English')), PRIMARY KEY (S_ID));

              In the above query, we have specified the CHECK constraint on the Percentage and Favourite_Subject column. According to this constraint, the Percentage column will allow only those records to be inserted where the percentage secured by students is above 90, and the favourite subject of the student is either Science, Maths or English. To verify that the check constraint is created successfully on the percentage and Favourite_Subject column, we will execute the following command: 
           
            
SHOW CREATE TABLE student;

              Now, we will try to insert a record in the student table where the percentage secured by the student is above 90. 
           
            
INSERT INTO students(S_ID, S_Name, Hometown, Percentage, Favourite_Subject) VALUES(106, "Harshada", "Nashik", 92, "Science");

              A record where the percentage secured by the student is 92 is inserted successfully. Since we have applied the check constraint on the Percentage column, it will allow only the percentage more than 90. Now, we will try to insert a record in the student table where the percentage secured by the student is below 90. 
           
            
INSERT INTO student(S_ID, S_Name, Hometown, Percentage, Favourite_Subject) VALUES(106, "Harshada", "Nashik", 89, "Science");

              Constraint failed error is issued when we tried to insert a student whose percentage is 89. Since we have applied the check constraint on the Percentage column, it will allow only the percentage more than 90. 3. Check constraint after table creation: A situation may arise when we need to apply a check constraint on a column after the table creation. In such cases, we have to use the ALTER command to apply the check constraint on an already created table. Syntax: 
           
            
ALTER TABLE TableName ADD CONSTRAINT ConstraintName CHECK(ColumnName CONDITION Value);

            Example 1: Suppose we created an employee table without any constraints, and later we decided to add a constraint on one of the columns. Then we will execute the following query: 
           
            
ALTER TABLE employee ADD CONSTRAINT Constraint_Age CHECK (Age <= 21);

              To verify that the check constraint is created successfully on the Age column, we will execute the following command: 
           
            
SHOW CREATE TABLE employee;

              Now, we will try to insert a record in the employee table where an employee's age is above 21. 
           
            
INSERT INTO employees(E_ID, Name, Salary, City, Designation, Date_of_Joining, Age) VALUES(11, "Simran Khanna", 45500, "Kolhapur", "HR", "2019-02-02", 22);

              Constraint failed error is issued when we tried to insert an employee whose age is above 21. Since we have applied the check constraint on the Age column, it will allow only the age values less than or equal to 21. Example 2: Suppose we created an employ table without any constraints, and later we decided to add a constraint on one of the columns. Then we will execute the following query: 
           
            
ALTER TABLE employ ADD CONSTRAINT Constraint_Age CHECK (Date_of_Joining <= "2019-01-01");

              To verify that the check constraint is created successfully on the Date_of_Joining column, we will execute the following command: 
           
            
SHOW CREATE TABLE employ;

              Now, we will try to insert a record in the employ table where the joining date of an employee is above '2019-01-01'. 
           
            
INSERT INTO employ(E_ID, Name, Salary, City, Designation, Date_of_Joining, Age) VALUES(11, "Simran Khanna", 45500, "Kolhapur", "HR", "2019-02-02", 26);

              Constraint failed error is issued when we tried to insert an employee whose joining date is '2019-02-02'. Since we have applied the check constraint on the Date_of_Joining column, it will allow only the joining dates below or equal to '2019-01-01'. 4. Remove a check constraint Suppose we have a check constraint created on the table's column. Later, we decided to remove that constraint from the column. Then, in such a situation, we will use the ALTER command to remove the check constraint. Syntax: 
           
            
ALTER TABLE TableName DROP CHECK ConstraintName;

            Example 1: Suppose we have a check constraint assigned on one of the columns of the students table. Later, we decided to remove that constraint. To verify the created constraint, we will execute the following query: 
           
            
SHOW CREATE TABLE students;

              We will execute the following command to remove the constraint named Constraint_Fav_sub: 
           
            
ALTER TABLE students DROP CHECK Constraint_Fav_sub;

              We will again execute the SHOW CREATE TABLE command to verify that the check constraint is removed successfully. 
           
            
SHOW CREATE TABLE students;

              Example 2: Suppose we have a check constraint assigned on one of the columns of the employee table. Later, we decided to remove that constraint. To verify the created constraint, we will execute the following query: 
           
            
SHOW CREATE TABLE employee;

              We will execute the following command to remove the constraint named Constraint_DOJ: 
           
            
ALTER TABLE employee DROP CHECK Constraint_DOJ;

              We will again execute the SHOW CREATE TABLE command to verify that the check constraint is removed successfully. 
           
            
SHOW CREATE TABLE employees;

              
            
            
            Next Topic
            SQL CLAUSES 
             
            
            ? prev 
            next ? 
             
          
        
        
       
       
      
        
        For Videos Join Our Youtube Channel:  Join Now 
       
       
      Feedback 
       
       Send your Feedback to [email protected] 
       
       
      Help Others, Please Share 
       
       
       
      
       
       
       
       
       
       Learn Latest Tutorials 
        
         
         
           
          Splunk 
           
         
         
           
          SPSS 
           
         
         
           
          Swagger 
           
         
         
           
          Transact-SQL 
           
         
         
           
          Tumblr 
           
         
         
           
          ReactJS 
           
         
         
           
          Regex 
           
         
         
           
          Reinforcement Learning 
           
         
         
           
          R Programming 
           
         
         
           
          RxJS 
           
         
         
           
          React Native 
           
         
         
           
          Python Design Patterns 
           
         
         
           
          Python Pillow 
           
         
         
           
          Python Turtle 
           
         
         
           
          Keras 
           
        
       
       
       
       Preparation 
        
         
         
           
          Aptitude 
           
         
         
           
          Reasoning 
           
         
         
           
          Verbal Ability 
           
         
         
           
          Interview Questions 
           
         
         
           
          Company Questions 
           
        
       
       
       
       Trending Technologies 
        
         
         
           
          Artificial Intelligence 
           
         
         
           
          AWS 
           
         
         
           
          Selenium 
           
         
         
           
          Cloud Computing 
           
         
         
           
          Hadoop 
           
         
         
           
          ReactJS 
           
         
         
           
          Data Science 
           
         
         
           
          Angular 7 
           
         
         
           
          Blockchain 
           
         
         
           
          Git 
           
         
         
           
          Machine Learning 
           
         
         
           
          DevOps 
           
        
       
       
       
       B.Tech / MCA 
        
         
         
           
          DBMS 
           
         
         
           
          Data Structures 
           
         
         
           
          DAA 
           
         
         
           
          Operating System 
           
         
         
           
          Computer Network 
           
         
         
           
          Compiler Design 
           
         
         
           
          Computer Organization 
           
         
         
           
          Discrete Mathematics 
           
         
         
           
          Ethical Hacking 
           
         
         
           
          Computer Graphics 
           
         
         
           
          Software Engineering 
           
         
         
           
          Web Technology 
           
         
         
           
          Cyber Security 
           
         
         
           
          Automata 
           
         
         
           
          C Programming 
           
         
         
           
          C++ 
           
         
         
           
          Java 
           
         
         
           
          .Net 
           
         
         
           
          Python 
           
         
         
           
          Programs 
           
         
         
           
          Control System 
           
         
         
           
          Data Mining 
           
         
         
           
          Data Warehouse 
           
        
       
      
     
     
      
      
       
     
     
     
      
       
      
     
      
     
     
     
      
     
      
     
      
     
     
     
      
      Javatpoint Services 
      JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. 
       
       Website Designing
       Website Development
       Java Development
       PHP Development
       WordPress
       Graphic Designing
       Logo
       Digital Marketing
       On Page and Off Page SEO
       PPC
       Content Development
       Corporate Training
       Classroom and Online Training
       Data Entry
       
      
     
      
      Training For College Campus 
      JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week
     
     
     
      
      Like/Subscribe us for latest updates or newsletter  
       
       
       
       
       
       
     
     
      
       Learn Tutorials
       Learn Java
       Learn Data Structures
       Learn C Programming
       Learn C++ Tutorial
       Learn C# Tutorial
       Learn PHP Tutorial
       Learn HTML Tutorial
       Learn JavaScript Tutorial
       Learn jQuery Tutorial
       Learn Spring Tutorial
      
      
       Our Websites
       Javatpoint.com
       Hindi100.com
       Lyricsia.com
       Quoteperson.com
       Jobandplacement.com
      
      
       Our Services
       Website Development
       Android Development
       Website Designing
       Digital Marketing
       Summer Training
       Industrial Training
       College Campus Training
      
      
       Contact
       Address: G-13, 2nd Floor, Sec-3
       Noida, UP, 201301, India
       Contact No: 0120-4256464, 9990449935
       Contact Us 
       Subscribe Us 
       Privacy Policy
       Sitemap
       
       About Me
      
     
     
      © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.
      
      
      
     
   
   
  
   
     
 

