

 
  
  snprintf() function in C - javatpoint
   
  
  
  
  
  
  
  
  
   
  
  
  
  
  
   
  
  
  
  
  
  
  
  
  
   
   
   
   
  
  
  ? SCROLL TO TOP 
  
    
    
      
      
        
         
          
           
          
         
          
           
           
       
      
      
     
     
      
       
       
      
      
       
       
      
     
     
      
       
       Home 
       C 
       C++ 
       C# 
       Java 
       SQL 
       HTML 
       CSS 
       JavaScript 
       XML 
       Ajax 
       Android 
       Cloud 
       Design Pattern 
       Quiz 
       Projects 
       Interview Q 
       Comment 
       Forum 
       
       
     
     
     
     
      
     
     
     C/C++ Training 
      
      C Tutorial 
      
      
      What is C Language 
      History of C  
      Features of C 
      How to install C 
      First C Program 
      Compilation Process in C 
      printf scanf 
      Variables in C 
      Data Types in c 
      Keywords in c 
      C Identifiers 
      C Operators 
      C Comments 
      C Format Specifier 
      C Escape Sequence 
      ASCII value in C 
      Constants in C 
      Literals in C 
      Tokens in C 
      C Boolean 
      Static in C 
      Programming Errors in C 
      Compile time vs Runtime 
      Conditional Operator in C 
      Bitwise Operator in C 
      2s complement in C 
      C Fundamental Test 
      
      
      C Control Statements 
      
      
      C if-else 
      C switch 
      if-else vs switch 
      C Loops 
      C do-while loop 
      C while loop 
      C for loop 
      Nested Loops in C 
      Infinite Loop in C 
      C break 
      C continue 
      C goto 
      Type Casting 
      C Control Statement Test 
      
      
      C Functions 
      
      
      What is function 
      Call: Value & Reference 
      Recursion in c 
      Storage Classes 
      C Functions Test 
      
      
      C Array 
      
      
      1-D Array 
      2-D Array 
      Return an Array in C 
      Array to Function 
      C Array Test 
      
      
      C Pointers 
      
      
      C Pointers 
      C Pointer to Pointer 
      C Pointer Arithmetic 
      Dangling Pointers in C 
      sizeof() operator in C 
      const Pointer in C 
      void pointer in C 
      C Dereference Pointer 
      Null Pointer in C 
      C Function Pointer 
      Function pointer as argument in C 
      C Pointers Test 
      
      
      C Dynamic Memory 
      
      
      Dynamic memory 
      
      
      C Strings 
      
      
      String in C 
      C gets() & puts() 
      C String Functions 
      C strlen() 
      C strcpy() 
      C strcat() 
      C strcmp() 
      C strrev() 
      C strlwr() 
      C strupr() 
      C strstr() 
      C String Test 
      
      
      C Math 
      
      
      C Math Functions 
      
      
      C Structure Union 
      
      
      C Structure 
      typedef in C 
      C Array of Structures 
      C Nested Structure 
      Structure Padding in C 
      C Union 
      C Structure Test 
      
      
      C File Handling 
      
      
      C File Handling 
      C fprintf() fscanf() 
      C fputc() fgetc() 
      C fputs() fgets() 
      C fseek() 
      C rewind() 
      C ftell() 
      
      
      C Preprocessor 
      
      
      C Preprocessor 
      C Macros 
      C #include 
      C #define 
      C #undef 
      C #ifdef 
      C #ifndef 
      C #if 
      C #else 
      C #error 
      C #pragma 
      C Preprocessor Test 
      
      
      C Command Line 
      
      
      Command Line Arguments 
      
      
      C Misc 
      
      
      C Expressions 
      Data Segments 
      Flow of C Program 
      Classification of Programming Languages 
      Enum in C 
      What is getch() in C 
      What is the function call in C 
      typedef vs define in C 
      
      
      C Programming Test 
      
      
      C Programming Test 
      
      
      C Programs 
      
      
      Top 10+ C Programs 
      Fibonacci Series 
      Prime Number 
      Palindrome Number 
      C program to compare the two strings 
      Strings Concatenation in C 
      Factorial 
      Armstrong Number 
      Sum of digits 
      Count the number of digits in C 
      Reverse Number 
      Swap Number 
      Print "Hello" without ; 
      Assembly code in C 
      C program without main 
      Matrix Multiplication 
      Decimal to Binary 
      Number in Characters 
      Alphabet Triangle 
      Number Triangle 
      Fibonacci Triangle 
      Hexadecimal to Binary 
      Hexadecimal to Decimal 
      Octal to Hexadecimal in C 
      Strong number in C 
      Star Program in C 
      itoa Function in C 
      Extra Long Factorials in C 
      Leap year program in C 
      Perfect Number Program in C 
      Variables vs Constants 
      Round Robin Program in C with Output 
      C Program to find the roots of quadratic equation 
      Type Casting vs Type Conversion 
      How to run a C program in Visual Studio Code 
      Modulus Operator in C/C++ 
      Sum of first N natural numbers in C 
      Big O Notation in C 
      LCM of two numbers in C 
      while loop vs do-while loop in C 
      Memory Layout in C 
      Balanced Parenthesis in C 
      Binary to Decimal Number in C 
      GCD of two numbers in C 
      Getchar() function in C 
      flowchart in C 
      Simpson Method 
      Pyramid Patterns in C 
      Random Function in C 
      Floyd's Triangle in C 
      C Header Files 
      abs() function in C 
      Atoi() function in C 
      Structure Pointer in C 
      sprintf() in C 
      Range of Int in C 
      C Program to convert 24 Hour time to 12 Hour time 
      What is double in C 
      What is the main in C 
      Calculator Program in C 
      Calloc in C 
      user-defined vs library function in C 
      Memset C 
      ASCII Table in C 
      Static function in C 
      Reverse a String in C 
      Twin Prime Numbers in C 
      strchr() function in C 
      Structure of a C program 
      Power Function in C 
      Malloc in C 
      Table Program in C 
      Types of Recursion in C 
      Convert Uppercase to Lowercase in C 
      Unary Operator in C 
      Arithmetic Operator in C 
      Ceil Function in C 
      Relational Operator in C 
      Assignment Operator in C 
      Pre-increment and Post-increment Operator in C 
      Pointer vs array in C 
      Restrict keyword in C 
      The exit() function in C 
      Const Qualifier in C 
      Sequence Points in C 
      Anagram in C 
      Increment and Decrement Operators in C 
      Logical AND Operator in C 
      Shift Operators in C 
      Near, Far, and Huge pointers in C language 
      Magic Number in C 
      Remove Duplicate Elements from an Array in C 
      Generic Linked list in C 
      isalnum() function in C 
      isalpha() function in C 
      Bisection Method in C 
      snprintf() function in C 
      
      
      MCQ 
      
      
      C language MCQ 
      C language MCQ Part 2 
      
      
      Math 
      
      
      Prime Numbers List 
      Composite Numbers List 
      Square Numbers List 
      Binary Numbers List 
      Fibonacci Numbers List 
      Ounces in a Cup 
      Ounces in a Pound 
      Ounces in a Gallon 
      Ounces in a Liter 
      Ounces in a Pint 
      Ounces in a Quart 
      Ounces in a Tablespoon 
      
      
      C Interview 
      
      
      C Interview Questions 
      
      
      
      
       
        
       
      
     
     
      
       
        
       
      
      
       
        
        
         
           
            
            next ? 
            ? prev 
            snprintf() function in C In this section, we will discuss the snprintf() function in the C programming language. The snprintf is a predefined library function of the stdio.h header file, which redirects the output of the standard printf() function to other buffers. The snprint() function is used to format the given strings into a series of characters or values in the buffer area. The snprintf() function contains an 'n' argument representing the maximum number of characters, including the null character, stored in the buffer area. The snprintf function also returns the number of characters that are inserted or written to the buffer. However, these characters are returned or displayed by the printf() function in the print statement or characters in the stdout header file.  Note: The snprintf() function inserts a null character to the end of the resulting output that is also counted as the size of the buffer. Furthermore, the buffer is an array that stores only character type elements, not in the string type. Syntax of the snprintf() function in C Following is the syntax of the snprintf() function in the c programming language. 
           
            
int snprintf (char *str, size_t size, const char *format, ?);

            Parameters: str: It is a character type array buffer. size: it defines the maximum number of characters that can store in the buffer. format: In C language, the string defines a format that contains the same type of specifications as the printf() function defines in the stdio.h header file. …: It is an optional (…) parameter or argument. Return Values: The snprintf() function returns the number of characters or values that have been written or stored for a sufficiently large buffer without including the null terminating character. And if the written characters are larger than the buffer size, it returns a negative value. And if the buffer size is too small, the given string will be truncated or reduced to the buffer size. Example 1: Program to demonstrate the snprintf() function in C Let's create a program to check the buffer size and return the number of character enter to the buffer using the snprintf() function in C. 
           
            
/* create an example to use the snprintf function in c. */
#include <stdio.h>
#include <conio.h>

int main ()
{
	// declare and initialize the char variable
	char *r = "Javatpoint.com";
	char buf[100]; // define the size of character type buffer 
	
	/* use the snprintf() function to return the no. of character founded in the buffer area */
     int n = snprintf (buf, 34, "%s \n", r); // 34 represents the size of buffer to store max characters
	
	// display the string stored in the buffer and count each character of the buffer area.
	printf (" The given string is: %s \n Count the stored character: %d \n", buf, n);
	
	return 0; 	 
}  

            When we execute the above program, it produces the given output on the console screen. 
           
            The given string is: Javatpoint.com

Count the stored character: 16

            2nd execution 
           
            The given string is: Javatpoint.com
Count the stored character: -1

            Now we reduce the max input character from 34 to 14, and this time, it returns a negative number, indicating the buffer size is less than the given string. Example 2: Program to use the snprintf() function in C Let's create an example to insert the character to the buffer and return from the same using the snprintf() function in C programming language. 
           
            
#include <stdio.h>
#include <conio.h>

int main ()
{
	char buf[200]; // define the size of character type buffer 


	int ret_val, buf_size = 55;
	char name[] = "David"; // define string
	int age = 19;
		
	// use the snprintf() function to return the no. of character found in buffer area
	ret_val = snprintf (buf, buf_size, "Hello friend, My name is %s, and I am %d years old.", name, age);
	
	
	/* check ret_value should be greater than 0 and less than the size of the buffer (buf_size). */
	if ( ret_val > 0 && ret_val < buf_size)
	{
		printf (" Buffer is written successfully! \n ");
		printf (" %s\n", buf);
		printf (" No. of characters read: %d", ret_val);
	}
	else
	{
		printf (" Buffer is not completely filled or written. \n ");
		printf (" %s \n", buf);
		printf (" The return value: %d", ret_val);
	}
	
	return 0; 
	 
}

            When we execute the above program, it produces the given output on the console screen. 
           
            Buffer is written successfully!
Hello friend, My name is David, and I am 19 years old.
No. of characters read: 53

            In the above program, we declared the character type buffer buf[200], and the buf_size variable can insert the maximum characters is 55. If the given statement is in the defined range, the snprintf() function returns the total no. of characters read from the buffer.  2nd execution 
           
            Buffer is not completely filled or written.
Hello friend, My name is David and
The return value: -1

            When we define the buf_size as 35, the given statement is automatically truncated by the snprintf() function that returns a negative number (-1) and displays "Buffer is not completely filled or written". 
            
            
            Next Topic
            # 
             
            
            ? prev 
            next ? 
             
          
        
        
       
       
      
        
        For Videos Join Our Youtube Channel:  Join Now 
       
       
      Feedback 
       
       Send your Feedback to [email protected] 
       
       
      Help Others, Please Share 
       
       
       
      
       
       
       
       
       
       Learn Latest Tutorials 
        
         
         
           
          Splunk 
           
         
         
           
          SPSS 
           
         
         
           
          Swagger 
           
         
         
           
          Transact-SQL 
           
         
         
           
          Tumblr 
           
         
         
           
          ReactJS 
           
         
         
           
          Regex 
           
         
         
           
          Reinforcement Learning 
           
         
         
           
          R Programming 
           
         
         
           
          RxJS 
           
         
         
           
          React Native 
           
         
         
           
          Python Design Patterns 
           
         
         
           
          Python Pillow 
           
         
         
           
          Python Turtle 
           
         
         
           
          Keras 
           
        
       
       
       
       Preparation 
        
         
         
           
          Aptitude 
           
         
         
           
          Reasoning 
           
         
         
           
          Verbal Ability 
           
         
         
           
          Interview Questions 
           
         
         
           
          Company Questions 
           
        
       
       
       
       Trending Technologies 
        
         
         
           
          Artificial Intelligence 
           
         
         
           
          AWS 
           
         
         
           
          Selenium 
           
         
         
           
          Cloud Computing 
           
         
         
           
          Hadoop 
           
         
         
           
          ReactJS 
           
         
         
           
          Data Science 
           
         
         
           
          Angular 7 
           
         
         
           
          Blockchain 
           
         
         
           
          Git 
           
         
         
           
          Machine Learning 
           
         
         
           
          DevOps 
           
        
       
       
       
       B.Tech / MCA 
        
         
         
           
          DBMS 
           
         
         
           
          Data Structures 
           
         
         
           
          DAA 
           
         
         
           
          Operating System 
           
         
         
           
          Computer Network 
           
         
         
           
          Compiler Design 
           
         
         
           
          Computer Organization 
           
         
         
           
          Discrete Mathematics 
           
         
         
           
          Ethical Hacking 
           
         
         
           
          Computer Graphics 
           
         
         
           
          Software Engineering 
           
         
         
           
          Web Technology 
           
         
         
           
          Cyber Security 
           
         
         
           
          Automata 
           
         
         
           
          C Programming 
           
         
         
           
          C++ 
           
         
         
           
          Java 
           
         
         
           
          .Net 
           
         
         
           
          Python 
           
         
         
           
          Programs 
           
         
         
           
          Control System 
           
         
         
           
          Data Mining 
           
         
         
           
          Data Warehouse 
           
        
       
      
     
     
      
      
       
     
     
     
      
       
      
     
      
     
     
     
      
     
      
     
      
     
     
     
      
      Javatpoint Services 
      JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. 
       
       Website Designing
       Website Development
       Java Development
       PHP Development
       WordPress
       Graphic Designing
       Logo
       Digital Marketing
       On Page and Off Page SEO
       PPC
       Content Development
       Corporate Training
       Classroom and Online Training
       Data Entry
       
      
     
      
      Training For College Campus 
      JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week
     
     
     
      
      Like/Subscribe us for latest updates or newsletter  
       
       
       
       
       
       
     
     
      
       Learn Tutorials
       Learn Java
       Learn Data Structures
       Learn C Programming
       Learn C++ Tutorial
       Learn C# Tutorial
       Learn PHP Tutorial
       Learn HTML Tutorial
       Learn JavaScript Tutorial
       Learn jQuery Tutorial
       Learn Spring Tutorial
      
      
       Our Websites
       Javatpoint.com
       Hindi100.com
       Lyricsia.com
       Quoteperson.com
       Jobandplacement.com
      
      
       Our Services
       Website Development
       Android Development
       Website Designing
       Digital Marketing
       Summer Training
       Industrial Training
       College Campus Training
      
      
       Contact
       Address: G-13, 2nd Floor, Sec-3
       Noida, UP, 201301, India
       Contact No: 0120-4256464, 9990449935
       Contact Us 
       Subscribe Us 
       Privacy Policy
       Sitemap
       
       About Me
      
     
     
      © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.
      
      
      
     
   
   
  
   
     
 

