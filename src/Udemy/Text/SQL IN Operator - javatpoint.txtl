SQL IN Operator - javatpoint ? SCROLL TO TOP Home SQL PL/SQL MySQL MongoDB PostgreSQL SQL Server Oracle Cassandra SQLite DBMS Python Java Aptitude Interview Q Oracle Training SQL Tutorial What is SQL SQL Syntax SQL Data Types SQL Operators SQL Database SQL CREATE Database SQL DROP Database SQL RENAME Database SQL SELECT Database SQL Table What is Table SQL CREATE TABLE SQL DROP TABLE SQL DELETE TABLE SQL RENAME TABLE SQL TRUNCATE TABLE SQL COPY TABLE SQL TEMP TABLE SQL ALTER TABLE SQL Select SELECT Statement SQL SELECT UNIQUE SQL SELECT DISTINCT SQL SELECT COUNT SQL SELECT TOP SQL SELECT FIRST SQL SELECT LAST SQL SELECT RANDOM SQL SELECT IN SQL SELECT Multiple SQL SELECT DATE SQL SELECT SUM SQL SELECT NULL SQL Clause SQL WHERE SQL AND SQL OR SQL WITH SQL AS SQL HAVING Clause SQL Order By ORDER BY Clause ORDER BY ASC ORDER BY DESC ORDER BY RANDOM ORDER BY LIMIT ORDER BY Multiple Cols SQL Insert INSERT Statement INSERT INTO Values INSERT INTO SELECT INSERT Multiple Rows SQL Update UPDATE Statement SQL UPDATE JOIN SQL UPDATE DATE SQL Delete DELETE Statement SQL DELETE TABLE SQL DELETE ROW SQL DELETE All Rows DELETE Duplicate Rows SQL DELETE DATABASE SQL DELETE VIEW SQL DELETE JOIN SQL Join SQL JOIN SQL Outer Join SQL Left Join SQL Right Join SQL Full Join SQL Cross Join SQL Keys Primary Key Foreign Key Composite Key Unique Key Alternate Key Difference SQL vs NoSQL IN vs EXISTS Group By vs Order By WHERE vs HAVING Where condition in SQL SQL Injection SQL Injection Misc SQL Formatter SQL group by SQL add/drop/update column operation SQL CAST Function SQL Comments SQL CONCAT Function CTE SQL How to use distinct in SQL Joining Three or More Tables in SQL What is Web SQL How to create functions in SQL How to run SQL Script How to Delete Duplicate Rows in SQL Nth Highest salary 12 Codd's Rules SQL EXCEPT Types of SQL JOIN Change datatype of column in SQL SQL Auto Increment SQL Like Commit and Rollback in SQL SQL Concatenate SQL get month from the date Savepoint in SQL SQL ORDER BY DATE TIME Datatype in SQL SQL BETWEEN SQL CRUD Operations SQL INDEX Scalar Functions in SQL SET Operators in SQL Types of SQL Commands TCL Commands in SQL SQL Subquery SQL View Constraints in SQL Pattern Matching in SQL SQL Date Functions DDL Commands in SQL DML Commands in SQL SQL CASE SQL Inner Join SQL IN Operator Check Constraint in SQL SQL CLAUSES SQL LOGICAL OPERATORS SQL MCQ SQL MCQ PL/SQL Tutorial PL/SQL Tutorial Interview SQL Interview PL/SQL Interview Quiz SQL Quiz next ? ? prev SQL IN Operator IN is an operator in SQL, which is generally used with a WHERE clause. Using the IN operator, multiple values can be specified. It allows us to easily test if an expression matches any value in a list of values. IN operator is used to replace many OR conditions. Syntax of IN operator in SQL: 
SELECT ColumnName FROM TableName WHERE ColumnName IN (Value 1, Value 2,…., ValueN);
 Now let us take a deeper dive into the IN operator in SQL with the help of examples. All the queries in the examples will be written using the MySQL database. Consider we have t_students table with the following data: ID Name Hometown Percentage Favourite_Subject 1 Soniya Jain Udaipur 89 Physics 2 Harshada Sharma Kanpur 92 Chemistry 3 Anuja Rajput Jaipur 78 History 4 Pranali Singh Nashik 88 Geography 5 Renuka Deshmukh Panipat 90 Biology 6 Swati Kumari Faridabad 93 English 7 Prachi Jaiswal Gurugram 96 Hindi 8 Sheetal Sonar Jaipur 93 Physics 9 Erica Goenka Faridabad 92 Biology 10 Monali Chaudhari Panipat 90 History Example 1: Write a query to display all the records from the t_students table where the hometown of the students is one of the following places: Faridabad, Panipat, or Jaipur. Query: mysql> SELECT *FROM t_students WHERE Hometown IN ("Faridabad", "Panipat", "Jaipur"); Here, we have written a SELECT query with a WHERE clause on the Hometown column followed by IN operator. All the places which are allowed in the Hometown column, i.e., Faridabad, Panipat, or Jaipur, are passed as a parameter to the IN operator. So, only those students from the t_students table whose hometown is one of the places which are passed to the IN operator will be considered in the output. You will get the following output: ID Name Hometown Percentage Favourite_Subject 3 Anuja Rajput Jaipur 78 History 5 Renuka Deshmukh Panipat 90 Biology 6 Swati Kumari Faridabad 93 English 8 Sheetal Sonar Jaipur 93 Physics 9 Erica Goenka Faridabad 92 Biology 10 Monali Chaudhari Panipat 90 History There are six students in the t_students table whose hometown is one of the following places: Faridabad, Panipat, or Jaipur. Example 2: Write a query to display all the records from the t_students table where the favourite subject of the students is one of the following subjects: History, Biology, Physics or Chemistry. Query: mysql> SELECT *FROM t_students WHERE Favourite_Subject IN ("History", "Biology", "Physics", "Chemistry"); Here, we have written a SELECT query with a WHERE clause on the Favourite_Subject column followed by IN operator. All the subjects which are allowed in the Favourite_Subject column, i.e., History, Biology, Physics, or Chemistry, are passed as a parameter to the IN operator. So, only those students from the t_students table whose favourite subject is one of the subjects which are passed to the IN operator will be considered in the output. You will get the following output: ID Name Hometown Percentage Favourite_Subject 1 Soniya Jain Udaipur 89 Physics 2 Harshada Sharma Kanpur 92 Chemistry 3 Anuja Rajput Jaipur 78 History 5 Renuka Deshmukh Panipat 90 Biology 8 Sheetal Sonar Jaipur 93 Physics 9 Erica Goenka Faridabad 92 Biology 10 Monali Chaudhari Panipat 90 History There are seven students in the t_students table whose favourite subject is one of the following subjects: History, Biology, Physics or Chemistry. Example 3: Write a query to display all the records from the t_students table where the percentage secured by the student is one of the following values: 78, 88, 89, 90, or 92. Query: mysql> SELECT *FROM t_students WHERE Percentage IN (78, 88, 89, 90, 92); Here, we have written a SELECT query with a WHERE clause on the Percentage column followed by IN operator. All the values which are allowed in the Percentage column, i.e., 78, 88, 89, 90, or 92, are passed as a parameter to the IN operator. So, only those students from the t_students table who have secured one of the percentage values which are passed to the IN operator will be considered in the output. You will get the following output: ID Name Hometown Percentage Favourite_Subject 1 Soniya Jain Udaipur 89 Physics 2 Harshada Sharma Kanpur 92 Chemistry 3 Anuja Rajput Jaipur 78 History 4 Pranali Singh Nashik 88 Geography 5 Renuka Deshmukh Panipat 90 Biology 9 Erica Goenka Faridabad 92 Biology 10 Monali Chaudhari Panipat 90 History There are seven students in the t_students table who have secured one of the following percentage values: 78, 88, 89, 90, or 92. Consider we have another table employee with the following data: ID Name Date_of_Birth Department Salary Job_Location 1 Mansi Shah 1999-01-10 Marketing 35000 Surat 2 Tejal Wagh 1993-07-05 HR 52000 Pune 3 Sejal Kumari 1995-06-08 Production 60000 Nashik 4 Sonal Jain 1996-12-10 HR 23000 Surat 5 Surili Maheshwari 1993-05-03 Development 75000 Shimla 6 Shrusti Sharma 1999-01-10 Accounts 53000 Noida 7 Ankita Joshi 1990-10-01 RnD 48000 Delhi 8 Sharda Patel 1989-12-12 Marketing 30000 Delhi 9 Shivangi More 1989-01-09 Accounts 67000 Mumbai 10 Shweta Tiwari 1981-10-09 Purchasing 60000 Bangalore Example 1: Write a query to display all the records from the employee table where the date of birth of an employee is one of the following dates: 1999-01-10, 1989-01-09, 1993-03-05, or 1993-05-03. Query: mysql> SELECT *FROM employee WHERE Date_of_Birth IN ("1999-01-10", "1989-01-09", "1993-03-05", "1993-05-03"); Here, we have written a SELECT query with a WHERE clause on the Date_of_Birth column followed by IN operator. All the dates which are allowed in the Date_of_Birth column, i.e., 1999-01-10, 1989-01-09, 1993-03-05, or 1993-05-03, are passed as a parameter to the IN operator. So, only those employees from the employee table whose date of birth matches with the dates passed to the IN operator will be considered in the output. You will get the following output: ID Name Date_of_Birth Department Salary Job_Location 1 Mansi Shah 1999-01-10 Marketing 35000 Surat 5 Surili Maheshwari 1993-05-03 Development 75000 Shimla 6 Shrusti Sharma 1999-01-10 Accounts 53000 Noida 9 Shivangi More 1989-01-09 Accounts 67000 Mumbai There are four employees in the employee table whose date of birth is either of the dates: 1999-01-10, 1989-01-09, 1993-03-05, or 1993-05-03. Example 2: Write a query to display all the records from the employee table where the department in which an employee is working is among one of the following departments: Purchasing, Accounts, Marketing, Production, or RnD. Query: mysql> SELECT *FROM employee WHERE Department IN ("Purchasing", "Accounts", "Marketing", "HR", "Production", "RnD"); Here, we have written a SELECT query with a WHERE clause on the Department column followed by IN operator. All the departments which are allowed in the Department column, i.e., Purchasing, Accounts, Marketing, Production, or RnD, are passed as a parameter to the IN operator. So, only those employees from the employee table who are working in the departments which are passed to the IN operator will be considered in the output. You will get the following output: ID Name Date_of_Birth Department Salary Job_Location 1 Mansi Shah 1999-01-10 Marketing 35000 Surat 2 Tejal Wagh 1993-07-05 HR 52000 Pune 3 Sejal Kumari 1995-06-08 Production 60000 Nashik 4 Sonal Jain 1996-12-10 HR 23000 Surat 6 Shrusti Sharma 1999-01-10 Accounts 53000 Noida 7 Ankita Joshi 1990-10-01 RnD 48000 Delhi 8 Sharda Patel 1989-12-12 Marketing 30000 Delhi 9 Shivangi More 1989-01-09 Accounts 67000 Mumbai 10 Shweta Tiwari 1981-10-09 Purchasing 60000 Bangalore There are nine employees in the employee table who are working in either of the departments: Purchasing, Accounts, Marketing, Production, or RnD. Example 3: Write a query to display all the records from the employee table where the job location of an employee is among one of the following places: Nashik, Surat, Noida, Delhi, or Pune. Query: mysql> SELECT *FROM employee WHERE Job_location IN ("Nashik", "Surat", "Noida", "Delhi", "Pune"); Here, we have written a SELECT query with a WHERE clause on the Job_Location column followed by IN operator. All the places which are allowed in the Job_Location column, i.e., Nashik, Surat, Noida, Delhi, or Pune, are passed as a parameter to the IN operator. So, only those employees from the employee table whose job location is among the places which are passed to the IN operator will be considered in the output. You will get the following output: ID Name Date_of_Birth Department Salary Job_Location 1 Mansi Shah 1999-01-10 Marketing 35000 Surat 2 Tejal Wagh 1993-07-05 HR 52000 Pune 3 Sejal Kumari 1995-06-08 Production 60000 Nashik 4 Sonal Jain 1996-12-10 HR 23000 Surat 6 Shrusti Sharma 1999-01-10 Accounts 53000 Noida 7 Ankita Joshi 1990-10-01 RnD 48000 Delhi 8 Sharda Patel 1989-12-12 Marketing 30000 Delhi There are seven employees in the employee table whose job location is either Nashik, Surat, Noida, Delhi, or Pune. Example 4: Write a query to display all the records from the employee table where the salary of an employee is among one of the following values: 60000, 53000, 30000, or 45000. Query: mysql> SELECT *FROM employee WHERE Salary IN (60000, 53000, 30000, 45000); Here, we have written a SELECT query with a WHERE clause on the Salary column followed by IN operator. All the values which are allowed in the Salary column, i.e., 60000, 53000, 30000, or 45000, are passed as a parameter to the IN operator. So, only those employees from the employee table whose salary is among the values which are passed to the IN operator will be considered in the output. You will get the following output: ID Name Date_of_Birth Department Salary Job_Location 3 Sejal Kumari 1995-06-08 Production 60000 Nashik 6 Shrusti Sharma 1999-01-10 Accounts 53000 Noida 8 Sharda Patel 1989-12-12 Marketing 30000 Delhi 10 Shweta Tiwari 1981-10-09 Purchasing 60000 Bangalore There are four employees in the employee table whose salary is either 60000, 53000, 30000 or 45000. Next Topic Check Constraint in SQL ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn Tutorials Learn Java Learn Data Structures Learn C Programming Learn C++ Tutorial Learn C# Tutorial Learn PHP Tutorial Learn HTML Tutorial Learn JavaScript Tutorial Learn jQuery Tutorial Learn Spring Tutorial Our Websites Javatpoint.com Hindi100.com Lyricsia.com Quoteperson.com Jobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935 Contact Us Subscribe Us Privacy Policy Sitemap About Me ? Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.
