Difference between Rotational Latency and Disk Access Time in Disk Scheduling - javatpoint ? SCROLL TO TOP Home OS C Java PHP HTML CSS Bootstrap JavaScript jQuery jQuery UI Quiz Projects Interview Q Comment Forum Training OS Tutorial OS Tutorial Types of OS Process Management Introduction Attributes of a Process Process States Process Schedulers Process Queues Times Related to Process CPU Scheduling Scheduling Algorithms FCFS Scheduling Convoy Effect in FCFS FCFS with overhead SJF Scheduling Burst Time Prediction SRTF scheduling SRTF GATE 2011 Example Round Robin Scheduling RR scheduling Example HRRN Scheduling HRNN Example Priority Scheduling Non Preemptive Priority Preemptive Priority SRTF:IO bound processes Synchronization Introduction Critical Section Problem Lock Variable Mechanism TSL Mechanism Priority Inversion in TSL Turn Variable Interested Variable Paterson Solution Without Busy Waiting Sleep and Wake Semaphore Introduction Counting Semaphore Problem on counting semaphore Binary Semaphore Deadlocks Introduction strategies Handling Deadlock Prevention Deadlock Avoidance Resource Allocation Graph Detection using RAG Detection and Recovery Memory Management Introduction Fixed Partitioning Dynamic Partitioning Compaction Bit Map for Dynamic Partitioning Linked List for Dynamic Partitioning Partitioning Algorithms GATE on Best Fit & First Fit Need for Paging Paging with Example Binary Addresses Physical & Logical Address Page Table Mapping from page table Page Table Entry Page Table Size Finding Optimal Page Size Virtual Memory Look aside Buffer GATE question on TLB Demand Paging Inverted Page Table Page Replacement Gate on LRU and FIFO Numerical on LRU, FIFO Beladys Anamoly Segmentation Paging VS Segmentation Segmented Paging File Management Attributes of the File Operations on the File File Access Methods Directory Structure Single level Directory Two level Directory Tree structured Directory Acyclic Graph Directories File System File System Structure Master Boot Record On Disk Data Structures In memory Data structures Directory Implementation Allocation Methods Contiguous Allocation Linked List Allocation File Allocation Table Indexed Allocation Linked Index Allocation Inode Free space Management Disk Scheduling FCFS Scheduling SSTF Scheduling SCAN and C-SCAN Look and C-Look Numerical on SSTF Numerical on Disk Misc Functions of OS Mobile OS Swapping in OS Threads in OS Fedora Operating System Uses of Operating System Producer-Consumer problem Dining Philosophers Problem Readers Writers Problem History Of OS Banker's Algorithm in OS What is the context switching in the operating system Internal vs. External Fragmentation Multiprocessing Operating system Multiprogramming vs Multitasking Network Operating System Latest Operating System System Calls in Operating System Multitasking Operating System Distributed Operating System Fragmentation in Operating System Multithreading Models in Operating system Operating system services Batch Operating System Embedded Operating System Time-Sharing vs Real-Time Operating System Multi-User Operating System Memory Management Monolithic Structure of Operating System MS-DOS Operating System Spooling in Operating System Network Operating System vs Distributed Operating System Operating system vs Application software System Software vs Operating System Real-Time operating system Booting in Operating System Layered Structure of Operating System Multiprogramming vs. Time Sharing Operating System Distributed File System Multiprogramming Operating System Server Operating System 32 bit vs 64 bit Operating System Single User Operating System Process vs Program Operating System Security Components of Operating System GUI Operating System Android Operating System Buffering in Operating System Device Driver in Operating System Best Operating System for Hacking Clustered Operating System Android vs Windows OS Scheduler vs Dispatcher Deadlock vs Starvation Semaphore vs Monitor Boot Block and Bad Block in Operating System Hard and Soft Real-Time Operating System Concurrency in Operating System Microkernel in Operating System Protection in Operating System Benefits of Multithreading Host vs Guest Operating System Livelock in Operating System Dual Mode Operations in Operating System What is Access Token in Operating System Deadlock Detection in Distributed Systems CUI vs GUI Monolithic vs layered Operating System Mutex vs Semaphore What is Interleaved Memory Trap vs Interrupt in Operating System Open-Source Operating System Multiple Processors Scheduling in Operating System Starvation and Aging in Operating Systems Best Android Operating System for PC Device Management in Operating System Disk Controller in Operating System Views of Operating System Tasks in Real-Time Systems What is RPC in Operating System C-SCAN vs SSTF Disk Scheduling Algorithm Look vs C-Look Disk Scheduling Algorithm SCAN vs C-SCAN Disk Scheduling Algorithm SCAN vs FCFS Disk Scheduling Algorithm Lamport's Bakery Algorithm Basic Disk vs Dynamic Disk What is Zombie Process FCFS vs SSTF Disk Scheduling Algorithm LRU vs LFU Page Replacement Algorithm SSTF vs C-LOOK Disk Scheduling Algorithm C-LOOK vs C-SCAN Disk Scheduling Algorithm Rotational Latency vs Disk Access Time in Disk Scheduling SSTF vs LOOK Disk Scheduling Algorithm Virtual vs Physical Address Address binding in Operating System Preemptive vs Non-Preemptive Scheduling Properties of Operating System What is Processor Affinity MCQ Operating System MCQ OS MCQ Part-2 next ? ? prev Difference between Rotational Latency and Disk Access Time in Disk Scheduling Operating systems do disk scheduling to schedule I/O requests arriving for the disk. Disk scheduling is important because multiple I/O requests may arrive by different processes, and only one I/O request can be served at a time by the disk controller. Thus other I/O requests need to wait in the waiting queue and need to be scheduled. There are some important terms: seek time, Rotational Latency, Transfer time, and Disk Access Time. Seek time is measured defines the amount of time it takes a hard drive's read/write head to find the physical location of a piece of data on the disk. Latency is the average time for the sector being accessed to rotate into position under ahead, after a completed seeks. What is Rotational Latency? The disk is divided into many circular tracks, and these tracks are further divided into blocks known as sectors. To access data, the actuator arm moves the read-write head over the platter to a particular track while the platter spins to position the requested sector under the read-write head. The time taken by the platter to rotate and position the data under the read-write head is called rotational latency. This latency depends on the rotation speed of the spindle and is measured in milliseconds. The average rotational latency for a disk is half the amount of time it takes for the disk to make one revolution. Rotational Latency time depends on the rotational speed of a disk or spindle motor, measured in revolutions per minute (RPM). For most magnetic media-based drives, the average rotational latency is typically based on the empirical relation that the average latency in milliseconds for such a drive is one-half the rotational period. Here are the two types of disk rotation methods: Constant linear velocity (CLV), used mainly in optical storage, varies the rotational speed of the optical disc depending upon the position of the head, and Constant angular velocity (CAV) used in HDDs, standard FDDs, a few optical disc systems, and vinyl audio records spins the media at one constant speed regardless of where the head is positioned. For example, we have divided each track into 4 sectors. The systems get a request to read a sector from track 1. Thus the read/write head will move to track 1, which will be seek time. The read/write head is currently in sector 3 in the following diagram shown below. But the data may not be in sector 3, and the data block may be present in sector 1. The time required by the read/write head to move from sector 3 to sector 1 is the rotational latency shown in the next diagram below. Formula The following formula is used to calculate rotational latency in disk scheduling. 
Rotational Latency = (Angle between current sector and required sector) / (Rotational frequency) 
    //And

Average Rotational Latency = (1/2) * One rotation time
 All platters have their own read-write head. The head can only be moved forward and backward. If the header is moving forward, it means that the header is moving towards the innermost track. If the header is moved backward, it means that the header is moving towards the outermost track. Best Case = When the header is already in the desired sector. Worst Case = When the header is at the sector far away from the desired sector, you have to wait for one complete rotation. Average Case = Half of the rotation time. Example In the below example, we used the formula to calculate the rotational latency, 
Suppose, Speed = 2400 RPM (Rotation Per Minute)
Then, 2400 Rotation = 1 min 
1 Rotation = 60 sec / 2400     // 1 min = 60 sec
1 Rotation = 1/40 sec

One Rotation Time = 1/40 sec

Average Rotational Latency = (1/2) * (1/40)
= 1/80 sec 
 What is Disk Access Time? Disk Access Time is defined as the total time required by the computer to process a read/write request and then retrieve the required data from the disk storage. There are two components in disk access time. The first component is seek time which occurs when the read and write arm seeks the desired track. The second component is latency or wait time which occurs when the head write arm waits for the desired sector on the track to spin around. Access to the data on disks is measured in terms of milliseconds. However, this is much slower than the processing speeds of CPUs. Although I/O is still slow, it cannot match the speed improvements of modern processors. Disk Access Time is divided into two parts: Access Time Data Transfer Time Formula You can calculate the disk access time by using the following formula. 
Disk Access Time = Access Time + Data Transfer Time 

//OR

Disk Access Time = Seek time + Rotational delay + Transfer time + Controller overhead + Queuing delay

// Average disk access time is calculated as

Average disk access time = Average seek time + Average rotational delay + Transfer time + Controller overhead + Queuing delay
 1. Access Time Access Time is defined as the setup time before the actual data transfer takes place. For example, the read/write head is on track 1, but we need to read data from another track or segment. Thus, the read/write head will move to the data block location before the actual transfer occurs. This delay is called Access Time. Access Time is calculated by summation of the following: Seek Time: The time taken by the read/write head to reach the desired output. It is known to be the most important time because it cannot create a gap. Seek time is inversely proportional to the performance. The lesser seek time, the better will be the performance. 
Seek Time = (Number of tracks/cylinders crossed) * (Time to cross one track/cylinder)
 Rotational Latency: The time required by the read/write head to move from the current sector to the requested sector. 
Rotational latency = (Angle by which disk is rotated) / (Angular Frequency) 
 Command Processing Time: It is the time required by the disk device to process the command and establish a connection between the various components of the disk device to read/write data. It is due to the internal circuitry. Settle Time: Settle time is the time required by the read/write head to stop vibrating. NOTE: Command Processing Time and Settle Time are not normally mentioned in the numerical question, and we take them as zero. 2. Data Transfer Time Data Transfer Time is defined as the time required to transfer data between the system and the disk. Data Transfer Time is two types: Internal Transfer Rate: It is defined as the time required to move data between the disk surface and the hard disk cache. External Transfer Rate: It is defined as the time required to move data between the hard disk cache and the system. Difference between Rotational Latency and Disk Access Time Below are some differences between rotational latency and disk access time in disk scheduling, such as: Rotational Latency Disk Access Time It is the time required by the read/write head to move from one sector to another. It is the time required by the computer to process a read/write request and retrieve the required data. Most disk scheduling does not consider rotational frequency because, in a most modern system, the actual physical location of blocks is not available. It is very large compared to Seek time. Rotational latency depends on the rotational speed of the spindle. Disk Access Time depends on two parts, i.e., access time and data transfer time. Rotational latency can be reduced if a subsequent request belongs to an adjacent sector. We can reduce Disk Access Time if we can reduce access time and data transfer time. Rotational latency, = (Angle between the current sector and the required sector) / (Rotational frequency). Disk Access Time, = Seek time + Rotational Latency + Data Transfer Time Next Topic SSTF vs LOOK Disk Scheduling Algorithm ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn Tutorials Learn Java Learn Data Structures Learn C Programming Learn C++ Tutorial Learn C# Tutorial Learn PHP Tutorial Learn HTML Tutorial Learn JavaScript Tutorial Learn jQuery Tutorial Learn Spring Tutorial Our Websites Javatpoint.com Hindi100.com Lyricsia.com Quoteperson.com Jobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935 Contact Us Subscribe Us Privacy Policy Sitemap About Me ? Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.
