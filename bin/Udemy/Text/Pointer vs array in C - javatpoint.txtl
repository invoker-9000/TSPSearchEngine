Pointer vs array in C - javatpoint ? SCROLL TO TOP Home C C++ C# Java SQL HTML CSS JavaScript XML Ajax Android Cloud Design Pattern Quiz Projects Interview Q Comment Forum C/C++ Training C Tutorial What is C Language History of C Features of C How to install C First C Program Compilation Process in C printf scanf Variables in C Data Types in c Keywords in c C Identifiers C Operators C Comments C Format Specifier C Escape Sequence ASCII value in C Constants in C Literals in C Tokens in C C Boolean Static in C Programming Errors in C Compile time vs Runtime Conditional Operator in C Bitwise Operator in C 2s complement in C C Fundamental Test C Control Statements C if-else C switch if-else vs switch C Loops C do-while loop C while loop C for loop Nested Loops in C Infinite Loop in C C break C continue C goto Type Casting C Control Statement Test C Functions What is function Call: Value & Reference Recursion in c Storage Classes C Functions Test C Array 1-D Array 2-D Array Return an Array in C Array to Function C Array Test C Pointers C Pointers C Pointer to Pointer C Pointer Arithmetic Dangling Pointers in C sizeof() operator in C const Pointer in C void pointer in C C Dereference Pointer Null Pointer in C C Function Pointer Function pointer as argument in C C Pointers Test C Dynamic Memory Dynamic memory C Strings String in C C gets() & puts() C String Functions C strlen() C strcpy() C strcat() C strcmp() C strrev() C strlwr() C strupr() C strstr() C String Test C Math C Math Functions C Structure Union C Structure typedef in C C Array of Structures C Nested Structure Structure Padding in C C Union C Structure Test C File Handling C File Handling C fprintf() fscanf() C fputc() fgetc() C fputs() fgets() C fseek() C rewind() C ftell() C Preprocessor C Preprocessor C Macros C #include C #define C #undef C #ifdef C #ifndef C #if C #else C #error C #pragma C Preprocessor Test C Command Line Command Line Arguments C Misc C Expressions Data Segments Flow of C Program Classification of Programming Languages Enum in C What is getch() in C What is the function call in C typedef vs define in C C Programming Test C Programming Test C Programs Top 10+ C Programs Fibonacci Series Prime Number Palindrome Number C program to compare the two strings Strings Concatenation in C Factorial Armstrong Number Sum of digits Count the number of digits in C Reverse Number Swap Number Print "Hello" without ; Assembly code in C C program without main Matrix Multiplication Decimal to Binary Number in Characters Alphabet Triangle Number Triangle Fibonacci Triangle Hexadecimal to Binary Hexadecimal to Decimal Octal to Hexadecimal in C Strong number in C Star Program in C itoa Function in C Extra Long Factorials in C Leap year program in C Perfect Number Program in C Variables vs Constants Round Robin Program in C with Output C Program to find the roots of quadratic equation Type Casting vs Type Conversion How to run a C program in Visual Studio Code Modulus Operator in C/C++ Sum of first N natural numbers in C Big O Notation in C LCM of two numbers in C while loop vs do-while loop in C Memory Layout in C Balanced Parenthesis in C Binary to Decimal Number in C GCD of two numbers in C Getchar() function in C flowchart in C Simpson Method Pyramid Patterns in C Random Function in C Floyd's Triangle in C C Header Files abs() function in C Atoi() function in C Structure Pointer in C sprintf() in C Range of Int in C C Program to convert 24 Hour time to 12 Hour time What is double in C What is the main in C Calculator Program in C Calloc in C user-defined vs library function in C Memset C ASCII Table in C Static function in C Reverse a String in C Twin Prime Numbers in C strchr() function in C Structure of a C program Power Function in C Malloc in C Table Program in C Types of Recursion in C Convert Uppercase to Lowercase in C Unary Operator in C Arithmetic Operator in C Ceil Function in C Relational Operator in C Assignment Operator in C Pre-increment and Post-increment Operator in C Pointer vs array in C Restrict keyword in C The exit() function in C Const Qualifier in C Sequence Points in C Anagram in C Increment and Decrement Operators in C Logical AND Operator in C Shift Operators in C Near, Far, and Huge pointers in C language Magic Number in C Remove Duplicate Elements from an Array in C Generic Linked list in C isalnum() function in C isalpha() function in C Bisection Method in C snprintf() function in C MCQ C language MCQ C language MCQ Part 2 Math Prime Numbers List Composite Numbers List Square Numbers List Binary Numbers List Fibonacci Numbers List Ounces in a Cup Ounces in a Pound Ounces in a Gallon Ounces in a Liter Ounces in a Pint Ounces in a Quart Ounces in a Tablespoon C Interview C Interview Questions next ? ? prev Pointer vs array in C Generally, in most cases, users assume that the pointer and array are both the same thing. However, it is not that simple because we will find some distinct differences if we look deeply at both. Therefore in this article, we will see whether the pointer and array are really the same or not. Definition of array Arrays are generally used for storing the same types of data items or values that are same in the nature. Although arrays cannot be used to store the data items or values that are not same in the nature, it is also considered a significant disadvantage of the arrays. Syntax: 
int mark[5] = {19, 10, 8, 17, 9};
 Definition of the pointers Apart from the arrays, if we talk about the pointer, they are generally used for storing the memory address of the other variable instead of storing the actual value of the variable. However, we can also use the pointer to access the whole array by using the pointer arithmetic. In addition, it also even makes the accessing array process much faster. Syntax: The pointer variable can be as declared as shown below: 
//Declaration in C++
type * name;
 What are the main differences between pointers and arrays? Apart from what we have discussed above, the key differences can be found while implementing the pointer and array. For example, when the arrays are implemented, the fixed size of the memory block is allocated. On the other hand, where the pointers are implemented, the memory is dynamically allocated. Thus, allocating the memory in both the pointers and arrays can be considered the key difference. However, it is not the only difference that lies between the arrays and pointer because some other differences also do exist that are as follows: An array usually stores the variables ofsimilar data types, and the data types of the variables must match the type of array. However, the pointer variable stores the address of a variable of a type similar to a type of pointer variable type. We can generate an array of pointers, i.e. array whose variables are the pointer variables. On the other hand, we can also create a pointer that points to an array. In general, arrays are static, which means once the size of the array is declared, it cannot be resized according to users requirements. While on the other hand, pointers are dynamic, which means the memory allocated can be resized later at any point in time. Arrays are allocated at compile-time, while pointers are allocated at runtime If we talk about the size of an array, it usually depends on the number of variables are stored in it. While in the case of the pointer variable, it stores the address of the variable only. To understand it more clearly, you can consider the following given examples: The "sizeof" operator If we use the "sizeof(array)", it will return the amount of memory used by all elements stored in the array. However, if we use the it for the pointer, e.g. "sizeof(pointer)", it only returns the amount of memory used by the pointer variable itself. Comparison Chart Lets us see the quick comparison chart to understand the difference between both arrays and pointers in an easier manner: Basis for Comparison Pointer Array Declaration //In C++type * var_name; //In C++type var_name[size];//In Java.type var-name[ ];var_name = new type[size]; Working It generally stores the address of another variable of the same data type as the pointer variable's datatype. Array usually stores the value of the variable of the same datatype. Generation A pointer to an array can be generated. An array of pointers can be generated. Storage Pointers are specially designed to store the address of variables. A normal array stores values of variables, and pointer array stores the address of variables. Capacity Usually, arrays can store the number of elements the same size as the size of the array variable. A pointer variable can store the address of only one variable at a time. Conclusion In this article, we have explained the key differences between Array and Pointers. Therefore, after reading this article, we hope that your confusion about pointer and array will be cleared forever. Next Topic Restrict keyword in C ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn Tutorials Learn Java Learn Data Structures Learn C Programming Learn C++ Tutorial Learn C# Tutorial Learn PHP Tutorial Learn HTML Tutorial Learn JavaScript Tutorial Learn jQuery Tutorial Learn Spring Tutorial Our Websites Javatpoint.com Hindi100.com Lyricsia.com Quoteperson.com Jobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935 Contact Us Subscribe Us Privacy Policy Sitemap About Me ? Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.
