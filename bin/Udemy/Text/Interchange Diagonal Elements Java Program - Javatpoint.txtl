Interchange Diagonal Elements Java Program - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Training Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Interchange Diagonal Elements Java Program In this section, we will learn how to interchange diagonals of a matrix through a Java program. It is usually asked in Java interviews and academics. Consider the above 4*4 matrix whose size is n. In the above matrix, we have to swap the following indexes to interchange the diagonal. [0][0] swap with [0][3] [1][1] swap with [1][2] [2][2] swap with [2][1] [3][3] swap with [3][0] From the above, we observe that the row index of both sides is the same and the only change in column index. If we look carefully at the column index, we found the pattern that is on the left side column index is increasing by 1 and in the right side, column index is decreasing by 1. So, we can create a formula to get the right-side column index i.e. n-i-1. For the above logic, we require a loop in which we swap the diagonal elements. 
for(i=0; i<n-1;i++)
{
swap(a[i][i], a[i][n-i-1]);
}
 Note: To perform the diagonal interchange, the number of rows and columns must be the same. Algorithm Declare variables for the matrix size. Ask the user to initialize the matrix rows and columns Check if the number of rows and columns are equal or not. If equal, then ask the user to initialize the matrix. Print the original matrix. Swap the diagonal elements. Print the diagonals interchanged matrix. If rows and columns are not equal, print the same message. Let's implement the above logic in a Java program. In the following program, we have taken the input of a 3*3 matrix. After that, we have printed the original matrix, performed the swapping of elements, and at last printed the diagonal interchanged matrix. InterchangeDiagonal.java 
import java.util.Scanner;
public class InterchangeDiagonal
{
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter rows and column of the matrix: ");
        //reading the number of rows and column from the user
        int n=sc.nextInt();
        //creating a matrix of n*n
        int a[][] = new int [n][n];
        //input matrix elements 
        System.out.println("Enter the elements of the matrix: ");
        //loop for rows
        for(int i=0; i<n; i++)
        {
            //loop for column
            for(int j=0; j<n; j++)
            {
                //reading matrix elements
                a[i][j]=sc.nextInt();
            }
        }
        //printing the original matrix
        System.out.println("\nOriginal matrix: \n");
        for(int i=0; i<n; i++)
        {
            for(int j=0; j<n; j++)
            {
                 System.out.print(a[i][j]+"\t");
            }
            System.out.println(" ");
        }
        //swapping elements 
        for(int i=0; i<n; i++)
        {
            int temp = a[i][i];
            a[i][i] = a[i][n-i-1];
            a[i][n-i-1] = temp;
        }
        //prints the diagonal interchanged matrix
        System.out.println("\nDiagonal Interchanged Matrix: \n");
        for(int i=0; i<n; i++)
        {
            for(int j=0; j<n; j++)
            {
                 System.out.print(a[i][j]+"\t");
            }
            System.out.println(" ");
        }
    }
}
 Output: Next Topic Java Set to List ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn Tutorials Learn Java Learn Data Structures Learn C Programming Learn C++ Tutorial Learn C# Tutorial Learn PHP Tutorial Learn HTML Tutorial Learn JavaScript Tutorial Learn jQuery Tutorial Learn Spring Tutorial Our Websites Javatpoint.com Hindi100.com Lyricsia.com Quoteperson.com Jobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935 Contact Us Subscribe Us Privacy Policy Sitemap About Me ? Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.
